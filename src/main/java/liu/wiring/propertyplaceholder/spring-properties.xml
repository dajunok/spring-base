<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
               http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
               http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context-4.2.xsd">
	<!-- 创建属性占位符Bean (定义Bean的形式创建属性占位符Bean)
    <bean id="propertyConfigurer"  class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
			<property name="location" value="/liu/wiring/propertyPlaceholder/db.properties"/>
			<property name="location" value="/liu/wiring/propertyPlaceholder/placeholder.properties"/>
	</bean>-->
	
	<!--<context:property-placeholder>标签完整参数：
		<context:property-placeholder   
	        location="属性文件，多个之间逗号（,）分隔"  
	        file-encoding="文件编码"  
	        ignore-resource-not-found="是否忽略找不到的属性文件，默认false，即不忽略，找不到将抛出异常"  
	        ignore-unresolvable="是否忽略解析不到的属性，如果不忽略，找不到将抛出异常"  
	        properties-ref="本地Properties配置"  
	        local-override="是否本地覆盖模式，即如果true，那么properties-ref的属性将覆盖location加载的属性，否则相反"  
	        system-properties-mode="系统属性模式，默认ENVIRONMENT（表示先找ENVIRONMENT，再找properties-ref/location的），NEVER：表示永远不用ENVIRONMENT的，OVERRIDE类似于ENVIRONMENT"  
	        order="顺序，当配置多个<context:property-placeholder/>时的查找顺序"  
        />-->
    
    <!-- 使用<context:property-placeholder>标签使用自动创建属性占位符Bean -->
	<context:property-placeholder location="classpath:/liu/wiring/propertyPlaceholder/db.properties,
			/liu/wiring/propertyPlaceholder/placeholder.properties"/>
	
	<bean id="dataSource" class="liu.wiring.propertyPlaceholder.DataSource">
        <property name="driveClass" value="${driveClass}" />
        <property name="url" value="${url}" />
        <property name="userName" value="${userName}" />
        <property name="password" value="${password}" />
    </bean>

</beans>
