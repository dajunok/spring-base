一、案例说明：（转载：https://blog.csdn.net/tycoding/article/details/80480728）
	1、案例采用XML配置+settor注入方式，未使用任何注解。
	2、案例在XML配置中使用了Bean属性autowire="byType"实现自动装配
二、源代码文件（.java）介绍：
	【CDiscPlayer.java】：POJO（CD播放器），settor注入器类。
	【CompactDisc.java】:POJO（CD碟），被注入的类。
	【DigitalVideo.java】：POJO（DVD碟），被注入的类。
	
	【Test.java】：案例调试类。使用ClassPathXmlApplicationContext类获取XML资源配置文件。
三、知识点：
	1、autowire="byType"属性：把与Bean的属性具有相同类型的其他Bean自动装配到Bean的对应属性中。若没有相匹配的Bean，则不装配。
	  byType自动装配的方法和byName装配方式类似，区别在于byType找的是相同的数据类型，而byName找的是相同的名称
	2、采用settor注入方式是，要注意set方法命名问题，建议使用eclipse自动生成set和get方法。
	3、byType缺点：如果Spring找到了多个Bean的，他们的类型与需要自动装配的属性的类型都匹配，那么Spring会抛出异常，而不是选择注入哪个。
	       为解决这一错误，Spring提供了pimary和autowire-candidate两个属性。
	  <1> 为自动装配标识一个首选Bean，使用primary属性，如果设置primary="true"那么该Bean会被优先选择。
	                   但Spring却给每一个<bean>默认都配置了primary="true"属性，也就是此时每个Bean都是首选的，
	                   而你想指定哪个Bean是首选就必须设置其他Bean都是primary="false"候选。
	                   所以说：primary属性仅对标识的首选Bean有意义。如果想解决上面多个Bean都符合情况造成的报错，必须引入下面属性：
      <2> 即为想被忽略注入的<bean>配置autowire-candidate="false"属性，这样Spring在进行装配时就会
                              忽略autowire-candidate="false"标识的Bean。
